"use strict";
// Copyright (c) Gleb Panteleev. All rights reserved. Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAtom = exports.useSyncAtom = exports.UiSyncAtom = void 0;
/**
 * Набор хуков для Preact
 * @remarks
 * @packageDocumentation
 */
// @ts-ignore
const react_1 = require("react");
exports.UiSyncAtom = {
    add: "sync-add",
    remove: "sync-remove"
};
function useSyncAtom(atom) {
    const [state, mutate] = react_1.useState(atom.value);
    const mutator = v => mutate(v);
    react_1.useEffect(() => {
        let id = Math.random();
        atom.up(mutator);
        atom.dispatch(exports.UiSyncAtom.add, id);
        atom.parents && atom.parents.forEach(a => a.dispatch(exports.UiSyncAtom.add, id));
        return () => {
            atom.down(mutator);
            atom.dispatch(exports.UiSyncAtom.remove, id);
            atom.parents && atom.parents.forEach(a => a.dispatch(exports.UiSyncAtom.remove, id));
        };
    }, [atom]);
    return state;
}
exports.useSyncAtom = useSyncAtom;
function useAtom(atom) {
    const [state, mutate] = react_1.useState(atom.value);
    const mutator = v => mutate(v);
    react_1.useEffect(() => {
        atom.up(mutator);
        return () => {
            atom.down(mutator);
        };
    }, [atom]);
    return state;
}
exports.useAtom = useAtom;
