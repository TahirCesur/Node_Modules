{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React-Aypin Automat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"./Components/common/Footer\";\nimport Header from \"./Components/common/Header\";\nimport CustomRoutes from \"./router/CustomRoutes\";\nimport TopBar from \"./Components/common/TopBar\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    const userLanguage = navigator.language || navigator.userLanguage;\n\n    if (userLanguage.includes(\"tr\")) {\n      i18n.changeLanguage(\"tr\"); // Tarayıcı dilini Türkçe olarak algıladığında dil ayarınızı güncelleyin\n    }\n  }, []);\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        changeLanguage: changeLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomRoutes, {\n        changeLanguage: changeLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        changeLanguage: changeLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/React-Aypin Automat/src/App.js"],"names":["React","useEffect","BrowserRouter","Footer","Header","CustomRoutes","TopBar","useTranslation","App","i18n","userLanguage","navigator","language","includes","changeLanguage","lng"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAWF,cAAc,EAA/B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAGC,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACD,YAArD;;AACA,QAAIA,YAAY,CAACG,QAAb,CAAsB,IAAtB,CAAJ,EAAiC;AAC/BJ,MAAAA,IAAI,CAACK,cAAL,CAAoB,IAApB,EAD+B,CACJ;AAC5B;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMA,cAAc,GAAIC,GAAD,IAAS;AAC9BN,IAAAA,IAAI,CAACK,cAAL,CAAoBC,GAApB;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;GAzBQN,G;UACUD,c;;;KADVC,G;AA2BT,eAAeA,GAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"./Components/common/Footer\";\nimport Header from \"./Components/common/Header\";\nimport CustomRoutes from \"./router/CustomRoutes\";\nimport TopBar from \"./Components/common/TopBar\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction App() {\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    const userLanguage = navigator.language || navigator.userLanguage;\n    if (userLanguage.includes(\"tr\")) {\n      i18n.changeLanguage(\"tr\"); // Tarayıcı dilini Türkçe olarak algıladığında dil ayarınızı güncelleyin\n    }\n  }, []);\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n\n        <Header changeLanguage={changeLanguage} />\n        <TopBar />\n        <CustomRoutes changeLanguage={changeLanguage} />\n        <Footer changeLanguage={changeLanguage} />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}